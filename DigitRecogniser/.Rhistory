getwd()
install.packages("swirl")
install.packages("swirl")
library(swirl)
library("swirl")
a<-numeric(10)
a
typeof(a)
help(ditributions)
help("Distributions")
help("Normal")
install.packages("swirl")
installed.packages("rtweet")
install.packages("rtweet")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("devtools")
install.packages("openssl")
apt-get install libssl-dev/unstable
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("RSelenium")
install.packages("XML")
install.packages("wdman")
install.packages("RCurl")
install.packages("urltools")
install.packages("stringr")
install.packages("parsedate")
install.packages("lubridate")
install.packages("rvest")
install.packages("SnowballC")
install.packages("mongolite")
R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'
install.packages("e1071")
install.packages("mongolite")
install.packages("httr","/usr/local/lib/R/site-library")
install.packages("RSelenium","/usr/local/lib/R/site-library")
install.packages("wdman","/usr/local/lib/R/site-library")
install.packages("binman","/usr/local/lib/R/site-library")
install.packages("xml2","/usr/local/lib/R/site-library")
install.packages("XML","/usr/local/lib/R/site-library")
install.packages("rtweet","/usr/local/lib/R/site-library")
install.packages("rtweet","/usr/local/lib/R/site-library")
install.packages("lubridate")
install.packages("rvest")
install.packages("xml2")
install.packages("xml2")
install.packages("urltools")
install.packages("stringr")
install.packages("parsedate")
install.packages("SnowballC")
install.packages("mongolite")
install.packages("properties")
install.packages("Rserve")
install.packages("jsonlite")
install.packages("qdap")
setwd("/home/mukesh/Desktop/Kaggle/DigitRecogniser/")
install.packages("readr")
train <- read.csv("train.csv")
test <-  read.csv("test.csv")
head(train)
head(train[1:10])
m = matrix(unlist(train[10,-1], nrow = 28, byrow = TRUE))
image(m,col = grey.colors(255))
m = matrix(unlist(train[10,-1], nrow = 28, byrow = T))
image(m, col = grey.colors(255))
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = T)
image(m, col = grey.colors(255))
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = TRUE)
image(m, col = grey.colors(255))
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = T)
image(m, col = grey.colors(255))
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = T)
image(m, col = grey.colors(255))
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = T)
image(m, col = grey.colors(255))
unlist(train[10,-1])
unlist(train[10,-1])
m = matrix(unlist(train[10,-1]), nrow = 28, byrow = T)
dim(m)
str(train)
rotate <- function(x) t(apply(x, 2, rev))
par(mfrow = c(2,3))
lapply(1:6,
function(x) image (
rotate(matrix(unlist(train[x, -1]),nrow = 28,byrow = T)),
col = grey.colors(255),
xlab = train[x, 1]
)
)
install.packages("h2o")
install.packages("h2o")
install.packages("h2o")
localH2O = h2o.init(max_mem_size = '6g', nthreads = -1)
library("h2o")
localH2O = h2o.init(max_mem_size = '6g', nthreads = -1)
train[, 1] = as.factor(train[, 1])
train_h2o = as.h2o(train)
test_h2o = as.h2o(test)
s <- proc.time()
model = h2o.deeplearning(x = 2:785,
y = 1,
training_frame = train_h2o,
activation = "RectifierWithDropout",
input_dropout_ratio = 0.2,
hidden_dropout_ratios = c(0.5,0.5),
balance_classes = TRUE,
hidden = c(100,100),
momentum_stable = 0.99,
nesterov_accelerated_gradient = T,
epochs = 15)
h2o.confusionMatrix(model)
s - proc.time()
h2o_y_test <- h2o.predict(model, test_h2o)
df_y_test = as.data.frame(h2o_y_test)
df_y_test = data.frame(ImageId = seq(1,length(df_y_test$predict)),
Label = df_y_test$predict)
write.csv(df_y_test, file = "DataRecognizer.csv",row.names = F)
h2o.shutdown(prompt = F)
